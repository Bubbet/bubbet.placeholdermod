Part : /BASE_PART
{
	NameKey = "Parts/R_Laser"
	IconNameKey = "Parts/R_Laser"
	IDString = bubbet.electro_bolt_laser
	OtherIDs = ["electro_bolt_laser"]
	EditorGroup = "Power"
	DescriptionKey = "Parts/R_Laser_Desc"
	Cost = 3000
	AIValue = 15
	TypeCategories = [power]
	Size = [1, 3]
	PhysicalRect = [0, 1, 1, 2]
	SaveRect = &PhysicalRect
	SelectionPriority = 1
	SelectionTypeByRotation = true
	MaxHealth = 6000
	InitialPenetrationResistance = 100
	ProhibitAbove = 0
	AllowedDoorLocations
	[
		[-1, 2]
		[1, 2]
		[0, 3]
	]
	EditorIcon
	{
		Texture
		{
			File = "Graphics/icon.png"
			SampleMode = Linear
		}
		Size = [16, 48]
	}
	Components
	{
		
		
		BlueprintSprite0
		{
			File = "Graphics/blueprint.png"
			Size = [1, 3]
			Offset = [0, 0]
		Type=BlueprintSprite;}
		PowerUIStats
		{
			Min = 2
			Ideal = 4
			Type = UIStats
			Stat = Power
		}
		CrewUIStats
		{
			Min = 1
			Ideal = 3
			Type = UIStats
			Stat = Crew
		}
		IsOperational
		{
			Type = MultiToggle
			Toggles
			[
				PowerToggle
				BatteryStorage
				PartCrew
			]
			Mode = All
		}
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			ToggledOnChoices = [1]
		}

		FireModeToggle
		{
			Type = UIToggle
			ToggleID = "fire_mode"
			Default = 1
			ToggledOnChoices = [1]
		}

		BatteryStorage
		{
			Type = AmmoConsumer
			AmmoType = battery
			MaxAmmo = 8000
			Priorities = { Low=&../LowConsumeJobPriority; High=&../HighConsumeJobPriority; Empty=&../EmptyConsumeJobPriority }
			LowConsumeJobPriority = &/PRIORITIES/Weapon_Supply/Low
			HighConsumeJobPriority = &/PRIORITIES/Weapon_Supply/High
			EmptyConsumeJobPriority = &/PRIORITIES/Weapon_Supply/Empty
			JobUnassignThreshold = 1000000// Effectively unassignable.
			ResupplyThreshold = 1000
			AmmoDesireToggle = PowerToggle

			ReceiveAmmoMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}

		Graphics
		{
			Type = Graphics
			OperationalToggle = IsOperational,
			Location = [.5, 1.5]
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/laser_blaster_small/floor.png"
						Size = [1, 2]
						Offset = [0, 0.5]
					}
					{
						File = "./Data/ships/terran/laser_blaster_small/floor_33.png"
						Size = [1, 2]
						Offset = [0, 0.5]
					}
					{
						File = "./Data/ships/terran/laser_blaster_small/floor_66.png"
						Size = [1, 2]
						Offset = [0, 0.5]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"Graphics/Doodads2.png"
							"Graphics/Doodads3.png"
							"Graphics/Doodads4.png"
							"Graphics/Doodads5.png"
							"Graphics/Doodads6.png"
							"Graphics/Doodads7.png"
							"Graphics/Doodads8.png"
							"Graphics/Doodads9.png"
						]
						Size = [1, 3]
						Offset = [0, 0.1]
						AnimationInterval = 0.1
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "Graphics/Doodadsoff1.png"
						Size = [1, 3]
						Offset = [0, 0.1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "./Data/ships/terran/crew_quarters_small/walls.png"
						Size = [1.1, 2]
						Offset = [0, 0.5]
					}
					{
						File = "./Data/ships/terran/crew_quarters_small/walls_33.png"
						Size = [1.1, 2]
						Offset = [0, 0.5]
					}
					{
						File = "./Data/ships/terran/crew_quarters_small/walls_66.png"
						Size = [1.1, 2]
						Offset = [0, 0.5]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "Graphics/Roof1.png"
						Size = [1, 3]
					}
					{
						File = "Graphics/Roof2.png"
						Size = [1, 3]
					}
					{
						File = "Graphics/Roof3.png"
						Size = [1, 3]
					}
				]
			}
			OperationalRoofWindows
			{
				Layer = "roof_windows"
				DamageLevels
				[
					{
						File = "Graphics/RoofWindows1.png"
						Size = [1, 3]
						Offset = [0, 0]
					}
					{
						File = "Graphics/RoofWindows2.png"
						Size = [1, 3]
					}
					{
						File = "Graphics/RoofWindows3.png"
						Size = [1, 3]
					}
				]
			}
			NonOperationalRoofWindows = &OperationalRoofWindows
		}
		
		Turret
		{
			Source = PowerToggle
			OperationalToggle = IsOperational,
			Type = TurretWeapon
			Location = [.5, 1] // Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			FireInterval = 1.5
			FiringArc = 0d
			RotateSpeed = 90d
			FireThresholdAngle = 360d
			TargetSearchTriesPerFrame = 1
			AIFirepowerRating = 600
			FireModeToggle = FireModeToggle
			AllowFireWithBlockedLOS = true
			AllowFriendlyDamage = true
			AutoFire = true
			Fire = true
			AutoShoot = true
			FireAuto = true
			Auto = true
			Interval = .5
			Trigger = true
			CanBeGivenExplicitTarget = false

			CoverageSectorArc
			{
			}
			
			OldEmitter
			{
				Type = Beam
				Range = 150000
				IdealRange = -1
				Duration = 1.5
				HitInterval = 0.5
				Penetration = 100

				BeamMediaEffects
				[
					{
						Type = Beam
						BeamSprite
						{
							Texture = "beam_base.png"
							_baseColor = [255, 255, 255, 255]
							Shader = "./Data/shots/ion_beam/beam.shader"
							_sizePulseFactor = 0.4//1.2
							_sizePulseInterval = .35
							_sizePulseUOffsetFactor = -.03
							Size = [0.75, 0]// Only width matters.
							VertexColor = [255, 255, 255, 200]
						}
						FadeInTime = .75
						FadeOutTime = .25
						ArcSpriteSegments = 64
						Bucket = Middle1
					}
				]

				HitShield=&HitOperational
				HitOperational
				{
					HitEffects
					[
						{
							Type = PartAmmoDrain
							AmmoType = battery
							Amount = -300
							AllowFriendlyDrain = true
						}
					]

					MediaEffects
					[
						&/PARTICLES_14019596578125481320/EnergyLaserHit

						: /BASE_SOUNDS/AudioExterior
						{
							Sound = "./Data/shots/ion_beam/hit.wav"
							Volume = .05
							MaxConcurrent = 1
							MaxConcurrentVolume = 0.5
							IntensityRampUpTime = .25
							IntensityRampDownTime = .25
						}
					]
				}
				HitStructural=&HitOperational
			}
		Emitter = TurretEmitter
		}

		TurretEmitter: Turret/OldEmitter
		{
			Type = BeamEmitter
			Location
			[
				0
				0
			]
			ChainedTo = Turret
			FireTrigger = Turret
			GetTargetFrom = Turret
			OperationalToggle = IsOperational
			FireDelay = 0
			AmmoStorage = BatteryStorage
			AmmoUsed = 1000
		}

		CrewLocation
		{
			Type = CrewLocation
			Location = [.5, 2.5]
			Rotation = 180d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 1
			Priorities = { First=&../FirstCrewJobPriority; Additional=&../AdditionalCrewJobPriority; Full=&../FullCrewJobPriority }
			FirstCrewJobPriority = &/PRIORITIES/Weapon_Crew/First
			AdditionalCrewJobPriority = &/PRIORITIES/Weapon_Crew/Additional
			FullCrewJobPriority = &/PRIORITIES/Weapon_Crew/Full
			PrerequisitesBeforeCrewing = [BatteryStorage, PowerToggle]
			CrewDestinations
			[
				&../../CrewLocation/Location
			]
			CrewLocations
			[
				CrewLocation
			]
		}

		TurretCollider
		{
			Type = CircleCollider
			ChainedTo = Turret
			Radius = .45
			Density = .75
		}

		WeaponSprite
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [-0.4, 0]
			Rotation = 90d
			Layer = "doodads_high"
			ResetAnimationTrigger = TurretEmitter
			AtlasSprite
			{
				AnimationFiles
				[
					"Graphics/TurretLights1.png"
					"Graphics/TurretLights2.png"
					"Graphics/TurretLights3.png"
					"Graphics/TurretLights0.png"
					// Loop back to beginning and clamp there.
				]
				Size = [1, 3]
				AnimationInterval = 0.05
				AnimationStartTime = MinValue
				ClampAnimation = true
			}
		}

		WeaponSprite2
		{
			Type = Sprite
			ChainedTo = Turret
			Location = [-0.4, 0]
			Rotation = 90d
			Layer = "weapons"
			ResetAnimationTrigger = TurretEmitter
			AtlasSprite
			{
				File = "Graphics/Turret1.png"
				Size = [1, 3]
			}
		}
		
		AmmoSprites
		{
			Type = AmmoSprites
			Location = [.5, 1.6]
			AmmoStorage = BatteryStorage
			Layer = "doodads_low"
			HasZeroAmmoSprite = true
			AmmoLevels
			[
				{
					File = "Graphics/Batteries1.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries2.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries3.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries4.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries5.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries6.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries7.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries8.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Batteries9.png"
					Size = [1, 3]
				}
			]
		}
		AmmoGlowSprites
		{
			Type = AmmoSprites
			Location = [.5, 1.6]
			AmmoStorage = BatteryStorage
			Layer = "doodads_high"
			AmmoLevels
			[
				{
					File = "Graphics/Lights2.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights3.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights4.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights5.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights6.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights7.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights8.png"
					Size = [1, 3]
				}
				{
					File = "Graphics/Lights9.png"
					Size = [1, 3]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Toggle = IsOperational,
			Location = [.5, 1.5]
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/MedPartDestroyed
			Location = [.5, 2]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [.5, 2]
			Layer = "indicators"
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}
	}
}
